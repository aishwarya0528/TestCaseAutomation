name: React Test CI
on: [push]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
    - name: Install dependencies
      run: |
        cd frontend
        npm install
        npm install --save-dev jest @testing-library/react @testing-library/jest-dom jest-environment-jsdom @babel/preset-env @babel/preset-react babel-jest react react-dom
    - name: Check package versions
      run: |
        cd frontend
        npm list jest jest-environment-jsdom @testing-library/react @testing-library/jest-dom react react-dom
    - name: Create Jest config
      run: |
        cd frontend
        echo "module.exports = {
          testEnvironment: 'jsdom',
          transform: {
            '^.+\\.jsx?$': 'babel-jest',
          },
          setupFilesAfterEnv: ['./setupTests.js'],
        };" > jest.config.js
    - name: Create setup file for Jest
      run: |
        cd frontend
        echo "import '@testing-library/jest-dom';" > setupTests.js
    - name: Create Babel config
      run: |
        cd frontend
        echo '{
          "presets": ["@babel/preset-env", "@babel/preset-react"]
        }' > .babelrc
    - name: Create minimal test case
      run: |
        cd frontend
        echo "import React from 'react';
        import { render, screen } from '@testing-library/react';

        test('Minimal test case', () => {
          render(<div>Hello, World!</div>);
          expect(screen.getByText('Hello, World!')).toBeInTheDocument();
        });" > minimal.test.js
    - name: Run tests
      run: |
        cd frontend
        NODE_ENV=test npx jest minimal.test.js --config jest.config.js --verbose
